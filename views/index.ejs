<!DOCTYPE html>
<html>
<head>
	<meta charset=utf-8 />
	<title>JGIS [Version Beta]</title>
	<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
	<script src='https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.js'></script>
	<link href='https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.css' rel='stylesheet' />

	<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-locatecontrol/v0.43.0/L.Control.Locate.min.js'></script>
	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-locatecontrol/v0.43.0/L.Control.Locate.mapbox.css' rel='stylesheet' />
<!--[if lt IE 9]>
  <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-locatecontrol/v0.43.0/L.Control.Locate.ie.css' rel='stylesheet' />
  <![endif]-->
  <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-locatecontrol/v0.43.0/css/font-awesome.min.css' rel='stylesheet' />

  <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.4.10/leaflet.draw.css' rel='stylesheet' />
  <script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.4.10/leaflet.draw.js'></script>



  <style>
  	body { margin:0; padding:0; }
  	#map { position:absolute; top:0; bottom:0; width:100%; }
  	.leaflet-control-draw-measure {
  		background-image: url('/images/measure-control.png');
  		#background-size:     cover;                     
  		background-repeat:   no-repeat;
  		background-position: center center;
  	}

    .point-label {  white-space: nowrap;background:null;}
    
</style>
</head>
<body>
	<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/leaflet.markercluster.js'></script>
	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.css' rel='stylesheet' />
	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.Default.css' rel='stylesheet' />

	<script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
	<script src='https://api.mapbox.com/mapbox.js/plugins/turf/v2.0.2/turf.min.js'></script>
	<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-hash/v0.2.1/leaflet-hash.js'></script>

	<script src="https://unpkg.com/leaflet.measurecontrol@1.0.0"></script>


	<div id='map'></div>

	<script>
        $(function(){

          L.mapbox.accessToken = 'pk.eyJ1IjoidGVobm5uIiwiYSI6ImNpZzF4bHV4NDE0dTZ1M200YWxweHR0ZzcifQ.lpRRelYpT0ucv1NN08KUWQ';
          var map = L.mapbox.map('map');

          var googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
              maxZoom: 20,
              subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
          });
          var googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
              maxZoom: 20,
              subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
          });
          var googleStreet = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
              maxZoom: 20,
              subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
          });
          var osmStreet = L.mapbox.tileLayer('mapbox.streets');


          map.setView([13.539,100.745],6);
          var hash = new L.Hash(map);
          L.control.locate().addTo(map);


          var houseClusterGroup = new L.MarkerClusterGroup();

          L.control.layers({

           'Google Street':googleStreet,
           'Google Hybrid':googleHybrid.addTo(map),
           'Google Sat':googleSat,
           'OSM Street':osmStreet
       },{
        'หลังคาเรือน':houseClusterGroup.addTo(map)
    }).addTo(map);


          var featureGroup = L.featureGroup();

          var drawControl = new L.Control.Draw({
           edit: {
              featureGroup: featureGroup
          },
          draw:{
              polyline:false,
              polygon:false,
              circle:false,
              rectangle:false
          }
      }).addTo(map);

          var labelLayer = L.featureGroup().addTo(map);

          var houseLayer = L.mapbox.featureLayer();
          houseLayer.loadURL('/house')
          //houseLayer.loadURL('./house.json')
          .setFilter(function(feature){
            return (feature.geometry.coordinates[1]!= null) && (feature.geometry.coordinates[0]!= null)
        })
          .on('ready',function(){
            houseLayer.eachLayer(function(layer){
                var latLng =  [layer.feature.geometry.coordinates[1],layer.feature.geometry.coordinates[0]];
                var marker = L.marker(latLng,{
                    icon: L.mapbox.marker.icon({'marker-symbol': 'warehouse', 'marker-color': '#0000FF'}),
                    title:layer.feature.properties.title
                });
                marker.bindPopup(layer.feature.properties.title);
                marker.addTo(houseClusterGroup);
                var lbHtml = '<span style="background-color:#FFF8DC;">';
                lbHtml+=layer.feature.properties.hno+' หมู่ ';
                lbHtml+=layer.feature.properties.villno;
                lbHtml+='<span>';
                L.marker(latLng,{icon:L.divIcon({className:'point-label', html:lbHtml})}).addTo(labelLayer);

            });//end loop

            var popupcontent = '<input type="text" class="txt"/><div class="show" style="overflow: scroll;min-width: 220px;"></div>';
            popupcontent+= '<div class="btn-add" style="display:none"><button>บันทึก</button></div>';

            map.on('draw:created', function(e) {

                var url = $(location).attr('href'); 

                if(e.layerType === 'marker'){
                    featureGroup.addLayer(e.layer);
                    var drawFeatures = featureGroup.toGeoJSON();
                    var point = drawFeatures.features[drawFeatures.features.length-1];
                    var latLng = [point.geometry.coordinates[1],point.geometry.coordinates[0]];
                    var newMarker=L.marker(latLng,{
                        //draggable: true
                    }).addTo(map);
                    var popup = newMarker.bindPopup(popupcontent,{maxWidth:'auto'});
                    newMarker.openPopup();


                    $('.txt').on('keypress',function(e){
                        if(e.keyCode!==13) return;
                        $('.show').html('');
                        var s = $(this).val();
                        houseLayer.getGeoJSON().features.forEach(function(found){
                            if(found.properties.hno == s){
                                var hcode = found.properties.hcode;

                                $('.show').append('<a href=# class ="hc" data-hcode='+hcode+'>'+found.properties.title+'<a><br>');

                            }
                        })//loop

                        $('.hc').click(function(){
                            var hcode = $(this).data("hcode");
                            $('.txt').val($(this).text());
                            $('.show').html('')
                            $('.btn-add').toggle()
                            $('.btn-add').click(function(){


                                var json = {
                                    'hcode':hcode,
                                    'ygis':newMarker.getLatLng().lat,
                                    'xgis':newMarker.getLatLng().lng
                                }

                                $.ajax({
                                    type: 'POST',
                                    url: '/add',
                                    data: JSON.stringify(json),
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json"
                                }).done(function(data){ 

                                    console.log(data);       
                                    window.location.href= url;
                                    if(data.save==='ok'){
                                        location.reload();
                                    }else{
                                        alert('error')
                                    }
                                });
                                
                                
                                //location.reload();
                            });

                        });//click



                    });//keypress


                    newMarker.on('dragend',function(e){
                        console.log(e.target.getLatLng());
                    });
                    $('.txt').click(function(){
                        $(this).select();
                    });//click
                    popup.on('popupclose',function(){
                        newMarker.remove();
                    })




            }// end if

        });// end draw


        });// end Ready



map.on('overlayadd', function(layer){
    console.log('add -'+layer.name)
    if(layer.name==='หลังคาเรือน'){
        labelLayer.addTo(map)
    }
});

map.on('overlayremove', function(layer){
    console.log('remove -'+ layer.name)
    if(layer.name==='หลังคาเรือน'){
        labelLayer.remove();
    }
});








}); // end program

</script>
</body>
</html>